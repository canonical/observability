name: Build rock and release dev tag to GHCR

on:
  workflow_call:
    inputs:
      rock-name:
        description: "Name of the application for which to build the rock"
        required: true
        type: string
    secrets:
      OBSERVABILITY_NOCTUA_TOKEN:
        required: true

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Install dependencies
      run: |
        sudo snap install concierge --classic
        sudo concierge prepare -p microk8s --extra-snaps=just,yq
        # Install Syft
        curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh \
          | sh -s -- -b /usr/local/bin
    - name: Build rock
      run: |
        latest_version="$(find . -maxdepth 1 -type d -name '[0-9]*' | sort -V | tail -n1 | sed 's@./@@')"
        just pack "$latest_version"
    - name: Upload rock to ghcr.io
      env:
        ROCK_NAME: ${{ inputs.rock-name }}
        OBSERVABILITY_NOCTUA_TOKEN: ${{ secrets.OBSERVABILITY_NOCTUA_TOKEN }}
      run: |
        latest_version="$(find . -maxdepth 1 -type d -name '[0-9]*' | sort -V | tail -n1 | sed 's@./@@')"
        cd "$latest_version"
        sudo skopeo --insecure-policy copy \
          "oci-archive:$(realpath ./*.rock)" \
          "docker://ghcr.io/canonical/$ROCK_NAME:dev" \
          --dest-creds "observability-noctua-bot:$OBSERVABILITY_NOCTUA_TOKEN"
    - name: Create SBOM
      env:
        ROCK_NAME: ${{ inputs.rock-name }}
      run: |
        latest_version="$(find . -maxdepth 1 -type d -name '[0-9]*' | sort -V | tail -n1 | sed 's@./@@')"
        cd "$latest_version"
        # shellcheck disable=SC2086 # glob passed to realpath can't be wrapped
        syft "$(realpath ./${ROCK_NAME}_*.rock)" -o "spdx-json=${ROCK_NAME}.sbom.json"
    - name: Upload SBOM
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.rock-name }}-sbom
        path: "${{ inputs.rock-name}}.sbom.json"
    - name: Upload locally built rock artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.rock-name }}-rock
        path: "${{ inputs.rock-name }}_*.rock"
