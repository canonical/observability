name: Auto-update Charm Libraries
on:
  workflow_call:
    inputs:
      charm-path:
        description: "Path to the charm we want to publish. Defaults to the current working directory."
        default: '.'
        required: false
        type: string
      commit-username:
        description: "The username to use for committing the updates on the charm libraries"
        default: 'Noctua'
        required: false
        type: string
      commit-email:
        description: "The email address to use for committing the updates on the charm libraries"
        default: 'webops+observability-noctua-bot@canonical.com'
        required: false
        type: string
      charmcraft-channel:
        type: string
        default: "2.x/stable"
        required: false
        description: |
          The snap channel from which to install Charmcraft.
    secrets:
      CHARMHUB_TOKEN:
        required: false
      OBSERVABILITY_NOCTUA_TOKEN:
        required: true

permissions:
  contents: write
  pull-requests: write

jobs:
  update-lib:
    name: Check libraries
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Merge any pre-existing PRs from the automatically generated "chore/auto-libs" branch if the CI is green
        run: |
          # If a PR from "chore/auto-libs" is open and CI checks are passing, merge it
          is_pr_open="$(gh pr list --head chore/auto-libs --state open --json id --jq 'length')"
          if [[ "$is_pr_open" == "1" ]]; then
            if gh pr checks chore/auto-libs; then
              echo "CI checks are passing, merging the chore/auto-libs PR"
              gh pr merge chore/auto-libs --admin --squash --delete-branch
            fi
          elif [[ "$is_pr_open" != "0" ]]; then
            # The number of open PRs should always be either 0 or 1
            echo "There's two PRs from the same branch; this should never happen!"
            exit 1
          fi
        env:
          GH_TOKEN: ${{ secrets.OBSERVABILITY_NOCTUA_TOKEN }}

      - name: Check for major library updates
        run: |
          sudo snap install charmcraft --classic --channel "${{ inputs.charmcraft-channel }}"
          pip install git+https://github.com/lucabello/noctua
          cd "$GITHUB_WORKSPACE/${{ inputs.charm-path }}"
          issue_body=$(noctua charm libraries check --major)
          # Check if there are already open issues for major library upgrades
          open_issues_count="$(gh issue list --search 'chore: update libraries to new major versions' --state open --json id --jq 'length')"
          # Complete $issue_body if it's not empty
          if [[ "$issue_body" != "" ]]; then
            issue_body="$(printf "%s\n\n%s\n%s" "This issue was created automatically because a new major version was detected for a charm library." "You should update the following libraries:" "${issue_body}")"
          fi
          # If an issue already exists, update it or close it
          if [[ "$open_issues_count" == "1" ]]; then
            issue_number="$(gh issue list --search 'chore: update libraries to new major versions' --state open --json number --jq '.[].number')"
            issue_url="$(gh issue list --search 'chore: update libraries to new major versions' --state open --json url --jq '.[].url')"
            if [[ "$issue_body" == "" ]]; then
              echo "Closing issue #${issue_number}: $issue_url"
              gh issue close "$issue_number"
            else
              echo "Updating GitHub issue #${issue_number}: $issue_url"
              gh issue edit "$issue_number" --body "$issue_body"
            fi
          elif [[ "$open_issues_count" == "0" && "$issue_body" != "" ]]; then
            echo "Creating a GitHub issue for the major library version update"
            gh issue create \
              --title "chore: update libraries to new major versions" \
              --body "$issue_body"
          fi
          cd "$GITHUB_WORKSPACE"
        env:
          CHARMCRAFT_AUTH: "${{ secrets.CHARMHUB_TOKEN }}"
          GITHUB_TOKEN: "${{ secrets.OBSERVABILITY_NOCTUA_TOKEN }}"

      - name: Fetch charm libraries
        run: |
          git pull
          cd "$GITHUB_WORKSPACE/${{ inputs.charm-path }}"
          charmcraft fetch-lib
        env:
          CHARMCRAFT_AUTH: "${{ secrets.CHARMHUB_TOKEN }}"

      - name: Import and configure the GPG key for Noctua
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.NOCTUA_GPG_PRIVATE }}
          passphrase: ${{ secrets.NOCTUA_GPG_PASSPHRASE }}
          git_config_global: true
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Create a PR for local changes
        uses: peter-evans/create-pull-request@v6
        id: cpr
        with:
          token: ${{ secrets.OBSERVABILITY_NOCTUA_TOKEN }}
          commit-message: "chore: update charm libraries"
          committer: "${{ inputs.commit-username }} <${{ inputs.commit-email }}>"
          author: "${{ inputs.commit-username }} <${{ inputs.commit-email }}>"
          title: "chore: update charm libraries"
          body: |
            Automated action to fetch the latest minor and major versions of all charm libraries used by this charm. The branch of this PR 
            will be overwritten during the next check. Unless you really know what you're doing, you 
            most likely don't want to push any commits to this branch.

            The PR will be auto-merged if the CI is green, on the next iteration of the workflow.
          branch: chore/auto-libs
          delete-branch: true
