name: Pull Request

on:
  workflow_call:
    inputs:
      charm-path:
        description: "Path to the charm we want to publish. Defaults to the current working directory."
        default: '.'
        required: false
        type: string
      provider:
        description: "The provider to choose for either machine or k8s tests ('lxd' or 'microk8s')"
        default: 'microk8s'
        required: false
        type: string
    secrets:
       CHARMHUB_TOKEN:
         required: false
jobs:
  ci-ignore:
    name: Check against ignorelist
    runs-on: ubuntu-latest
    outputs:
      files: ${{ steps.diff.outputs.files }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Expand ignorelist
        shell: bash
        run: |
          test -f .ciignore || wget https://raw.githubusercontent.com/canonical/observability/main/.ciignore
          while IFS= read -r globline; do
            python -c "from glob import glob; print(\"\n\".join(glob(\"$globline\", recursive=True)))" >> .ciignore-expanded
          done < .ciignore
          mv .ciignore-expanded .ciignore
          sed -i '/^$/d' .ciignore
      - name: Generate diff
        id: diff
        shell: bash
        run: |
          base="remotes/origin/${{ github.base_ref }}"
          base_repo="${{ github.repository }}"
          head="remotes/origin/${{ github.head_ref }}"
          head_repo="${{ github.event.pull_request.head.repo.name }}"
          
          echo "Comparing $base to $head"
          if [[ "$base_repo" == "$head_repo" ]]; then # if the PR is NOT from a fork
            files=$(comm -23 <(git diff --name-only $base $head | sort) <(sort .ciignore))
          else
            files="(run the checks anyway)"
          fi
          echo "$files"
          echo "files=$files" | tr -d '\n' >> $GITHUB_OUTPUT
  quality-checks:
    name: Quality Checks
    needs:
      - ci-ignore
    if: ${{ needs.ci-ignore.outputs.files != '' }}
    uses: canonical/observability/.github/workflows/_quality-checks.yaml@main
    secrets: inherit
    with:
      charm-path: ${{ inputs.charm-path }}
      provider: ${{ inputs.provider }}
