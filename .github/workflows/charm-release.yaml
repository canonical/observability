name: Release Charm

on:
  workflow_call:
    inputs:
      charm-path:
        description: "Path to the charm we want to publish. Defaults to the current working directory."
        default: '.'
        required: false
        type: string
      provider:
        description: "The provider to choose for either machine or k8s tests ('lxd' or 'microk8s')"
        default: 'microk8s'
        required: false
        type: string
      charmcraft-channel:
        type: string
        default: "3.x/edge"
        required: false
        description: |
          The snap channel from which to install Charmcraft.
      juju-channel:
        type: string
        required: false
        description: |
          The snap channel from which to install Juju.
          Overrides the default branch-dependant selection of the Juju version.
      default-track:
        type: string
        required: false
        description: |
          The default track to release to when pushing to the 'main' branch.
          If the push happens to a branch named 'track/X', the charm will be
          released to the channel 'X/edge'.
        default: "latest"  # TODO: replace with 1
      git-tag-prefix:
        description: "Tag prefix to use for the tag of the GitHub release."
        default: ''
        required: false
        type: string
    secrets:
      CHARMHUB_TOKEN:
        required: true
      OBSERVABILITY_NOCTUA_TOKEN:
        required: true

concurrency:
  group: release
  cancel-in-progress: true

jobs:
  define-matrix:
    name: Define runner and build matrix
    runs-on: ubuntu-latest
    outputs:
      runners: ${{ steps.build-matrix.outputs.runners }}
      release-channel: ${{ steps.define-channel.outputs.release_channel }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          sudo snap install yq
      - name: Define build matrix
        id: build-matrix
        run: |
          cd "${{ inputs.charm-path }}"
          runners="$( \
            yq -o json '.platforms | to_entries | map(.key)' charmcraft.yaml | \
            sed 's/".*amd64.*"/"ubuntu-latest"/' | \
            sed 's/".*arm64.*"/"Ubuntu_ARM64_4C_16G_01"/' | \
            jq -rc \
          )"
          echo "runners=$runners"
          echo "runners=$runners" >> $GITHUB_OUTPUT
      - name: Define release channel
        id: define-channel
        env:
          GIT_BRANCH: ${{ github.ref_name }}
          DEFAULT_TRACK: ${{ inputs.default-track }}
        run: |
          if [[ "$GIT_BRANCH" == "main" ]]; then
            release_channel="${DEFAULT_TRACK}/edge"
          elif [[ "${GIT_BRANCH%/*}" == "track" ]]; then
            release_channel="${GIT_BRANCH#track/}/edge"
          fi
          echo "release_channel=$release_channel"
          echo "release_channel=$release_channel" >> $GITHUB_OUTPUT

  # quality-checks:
  #   name: Quality Checks
  #   uses: canonical/observability/.github/workflows/_charm-quality-checks.yaml@feature/v1
  #   needs: [define-matrix]
  #   secrets: inherit
  #   with:
  #     charm-path: ${{ inputs.charm-path }}
  #     provider: ${{ inputs.provider }}
  #     charmcraft-channel: ${{ inputs.charmcraft-channel }}
  #     juju-channel: ${{ inputs.juju-channel }}
    
  release-charm:
    name: Release Charm and Libraries
    needs:
      - define-matrix
      # - quality-checks
    uses: canonical/observability/.github/workflows/_charm-release.yaml@feature/v1
    permissions:
      contents: write
    secrets: inherit
    with:
      release-channel: "${{ needs.define-matrix.outputs.release-channel }}"
      charm-path: "${{ inputs.charm-path }}"
      runners: "${{ needs.define-matrix.outputs.runners }}"
      charmcraft-channel: "${{ inputs.charmcraft-channel }}"
      git-tag-prefix: "${{ inputs.git-tag-prefix }}"
      
  release-libs:
    name: Release any bumped charm library
    needs:
      - release-charm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the source
        uses: actions/checkout@v4
        with:
          path: charm
      - name: Release libraries
        env:
          CHARMCRAFT_AUTH: "${{ secrets.CHARMHUB_TOKEN }}"
        run: |
          # Install Charmcraft
          sudo snap install charmcraft --classic --channel ${{ inputs.charmcraft-channel }}
          cd $GITHUB_WORKSPACE/charm/${{ inputs.charm-path }}
          # Get the charm name
          charm_name=$((yq .name metadata.yaml 2>/dev/null || yq .name charmcraft.yaml) | tr - _)
          if [[ $charm_name = "" ]]; then echo "Error: can't extract the charm name." && exit 1; fi
          # For each library belonging to the charm, publish it
          if [ -d lib/charms/$charm_name ]; then
            for lib in $(find lib/charms/$charm_name -type f | sed 's|lib/||' | sed 's/.py//' | sed 's|/|.|g'); do
              charmcraft publish-lib $lib
            done
          fi

