name: Pull Request

on:
  workflow_call:
    inputs:
      charm-path:
        description: "Path to the charm we want to publish. Defaults to the current working directory."
        default: '.'
        required: false
        type: string
      provider:
        description: "The provider to choose for either machine or k8s tests ('machine' or 'microk8s')"
        default: 'microk8s'
        required: false
        type: string
      charmcraft-channel:
        type: string
        default: "3.x/candidate"
        required: false
        description: |
          The snap channel from which to install Charmcraft.
      juju-channel:
        type: string
        required: false
        description: |
          The snap channel from which to install Juju.
          Overrides the default branch-dependant selection of the Juju version.
      parallelize-integration:
        description: |
          Parallelize integration tests by spinning up one runner per Python file.
        default: true
        required: false
        type: boolean
      automatically-retry-hooks:
        description: |
          Whether Juju models should automatically-retry hooks.
          Sets the `automatically-retry-hooks` in the model-defaults config.
        default: true
        required: false
        type: boolean
    secrets:
       CHARMHUB_TOKEN:
         required: false

concurrency:
  group: ${{ github.ref }}${{ (inputs.charm-path && inputs.charm-path != '.') && format('-{0}', inputs.charm-path) || '' }}
  cancel-in-progress: true

jobs:
  ci-ignore:
    name: Check against ignorelist
    runs-on: ubuntu-latest
    outputs:
      any_modified: ${{ steps.echo-changes.outputs.any_modified }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }} # To be compatible with PRs from forks
          fetch-depth: 0

      - name: Determine changed files in the PR
        id: changed-files
        uses: tj-actions/changed-files@v45
        with:
          files_ignore: |
            README.md
            CONTRIBUTING.md
            INTEGRATING.md
            CODEOWNERS
            LICENSE
            icon.svg
            .gitignore
            .github/**

      - name: Echo changed files
        id: echo-changes
        run: |
          echo "Changes made: ${{ steps.changed-files.outputs.any_modified }}"
          echo "Modified files: ${{ steps.changed-files.outputs.all_modified_files }}"
          echo "any_modified=${{ steps.changed-files.outputs.any_modified }}" >> "$GITHUB_OUTPUT"

  lib-check:
    name: Check libraries  # Check if the charm libraries are updated and add the relevant label to the PR
    runs-on: ubuntu-latest
    needs: [ci-ignore]
    if: ${{ github.event_name == 'pull_request' && needs.ci-ignore.outputs.any_modified == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install charmcraft
        env:
          CHARMCRAFT_CHANNEL: "${{ inputs.charmcraft-channel }}"
        run: sudo snap install charmcraft --classic --channel="$CHARMCRAFT_CHANNEL"
      - name: Check charm libraries
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CHARMCRAFT_AUTH: ${{ secrets.CHARMHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.number }}
        run: |
          cd "${{ inputs.charm-path }}"
          fetch_lib="$(charmcraft fetch-lib)"
          # If charm libraries are not up-to-date
          if echo "$fetch_lib" | grep -qE "not found in Charmhub|updated to version|has local changes"; then
            gh pr edit "$PR_NUMBER" --remove-label "Charm Libraries: OK" --add-label "Charm Libraries: Out of Sync"
          else
            gh pr edit "$PR_NUMBER" --remove-label "Charm Libraries: Out of Sync" --add-label "Charm Libraries: OK"
          fi

  quality-checks:
    name: Quality Checks
    needs:
      - ci-ignore
    if: needs.ci-ignore.outputs.any_modified == 'true'
    uses: canonical/observability/.github/workflows/_charm-quality-checks.yaml@v1
    secrets: inherit
    with:
      charm-path: ${{ inputs.charm-path }}
      provider: ${{ inputs.provider }}
      charmcraft-channel: ${{ inputs.charmcraft-channel }}
      juju-channel: ${{ inputs.juju-channel }}
      parallelize-integration: ${{ inputs.parallelize-integration }}
      automatically-retry-hooks: ${{ inputs.automatically-retry-hooks }}

