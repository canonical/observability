name: Integration Tests

on:
  workflow_call:
    inputs:
      charm-path:
        type: string
        required: false
      provider:
        type: string
        description: "The provider to choose for either machine or k8s tests ('lxd' or 'microk8s')"
        required: true

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Get prefsrc
        run: |
          echo "IPADDR=$(ip -4 -j route get 2.2.2.2 | jq -r '.[] | .prefsrc')" >> $GITHUB_ENV
      - name: Setup operator enviroment (machine)
        if: inputs.provider == 'lxd'
        uses: charmed-kubernetes/actions-operator@main
        with:
          juju-channel: 3.4/edge
          provider: lxd
      - name: Setup operator environment (k8s)
        if: inputs.provider == 'microk8s'
        uses: charmed-kubernetes/actions-operator@main
        with:
          juju-channel: 3.4/edge
          provider: microk8s
          channel: 1.26-strict/stable
          microk8s-group: snap_microk8s
          microk8s-addons: "hostpath-storage dns metallb:${{ env.IPADDR }}-${{ env.IPADDR }}"
      - name: Run integration tests
        run: cd ${{ inputs.charm-path }} && tox -vve integration
      - name: Dump debug log
        if: failure()
        run: |
          for m in $(juju models --format json | jq -r '.models[].name' | grep -v "admin/controller"); do juju debug-log -m $m --replay --ms --no-tail; done
          exit 0
      - name: Dump pods and their logs
        if: failure()
        run: |
          juju status --relations --storage
          kubectl get pods \
              -A \
              -o=jsonpath='{range.items[*]}{.metadata.namespace} {.metadata.name}{"\n"}' \
              --sort-by=.metadata.namespace \
              | grep -v "^\s*$" \
              | while read namespace pod; do \
                   kubectl -n $namespace describe pod $pod; \
                   kubectl -n $namespace logs $pod \
                      --all-containers=true \
                      --tail=100; \
               done
          exit 0
      - name: Dump node information
        if: failure()
        run: |
          kubectl get nodes -v=10
          exit 0
      - name: Dump deployments
        if: failure()
        run: |
          kubectl describe deployments -A
          exit 0
      - name: Dump replicasets
        if: failure()
        run: |
          kubectl describe replicasets -A
          exit 0
      - name: Dump charmcraft logs
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: charmcraft-logs
          path: ~/.local/state/charmcraft/log/*.log
