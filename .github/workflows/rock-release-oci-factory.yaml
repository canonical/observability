name: Open a PR to OCI Factory when a new rock is merged to main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_call:
    inputs:
      rock-name:
        description: "Name of the application for which to build the rock"
        required: true
        type: string
    secrets:
      OBSERVABILITY_NOCTUA_TOKEN:
        required: true

permissions:
  contents: write
  pull-requests: write

jobs:
  release-oci-factory:
    name: Add the new rock
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the rock source
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
          path: rock

      - name: Check for a new rockcraft.yaml from the latest commit
        id: changed-files
        uses: tj-actions/changed-files@v43
        with:
          files: '**/rockcraft.yaml'
          path: rock

      - name: Get the latest commit SHA
        id: commit-sha
        if: steps.changed-files.outputs.all_changed_and_modified_files != ''
        run: |
          cd $GITHUB_WORKSPACE/rock
          commit_sha=$(git rev-parse HEAD)
          cd $GITHUB_WORKSPACE
          echo "commit_sha=$commit_sha" >> $GITHUB_OUTPUT

      - name: Sync the OCI Factory fork
        id: fork-sync
        if: steps.changed-files.outputs.all_changed_and_modified_files != ''
        env:
          GH_TOKEN: ${{ secrets.OBSERVABILITY_NOCTUA_TOKEN }}
        run: gh repo sync --force observability-noctua-bot/oci-factory

      - name: Clone the fork
        id: fork-clone
        if: steps.changed-files.outputs.all_changed_and_modified_files != ''
        uses: actions/checkout@v4
        with:
          path: oci-factory
          repository: observability-noctua-bot/oci-factory
          token: ${{ secrets.OBSERVABILITY_NOCTUA_TOKEN }}

      # Install the same yq version that is used in oci-factory
      - run: sudo snap install yq --channel=v4/stable

      - name: Update releases in image.yaml
        id: update-releases
        if: steps.changed-files.outputs.all_changed_and_modified_files != ''
        run: |
          pip install git+https://github.com/lucabello/noctua
          versions="$(echo ${{ steps.changed-files.outputs.all_changed_and_modified_files }} | tr ' ' '\n' | grep rockcraft.yaml | sed 's@/rockcraft.yaml@@g')"
          noctua rock manifest "${{ github.repository }}" \
            --commit="${{ steps.commit-sha.outputs.commit_sha }}" \
            --base=22.04 \
            $(echo $versions | sed -E 's/(\S+)/--version \1/g' | tr '\n' ' ') \  # build the --version flags
            > $GITHUB_WORKSPACE/oci-factory/oci/${{ inputs.rock-name }}/image.yaml

      - name: Commit to the fork
        id: fork-commit
        if: steps.changed-files.outputs.all_changed_and_modified_files != ''
        uses: EndBug/add-and-commit@v9
        with:
          add: 'oci/${{ inputs.rock-name }}/image.yaml'
          cwd: './oci-factory'
          message: 'chore: Add new ${{ inputs.rock-name }} releases'
          new_branch: 'update-${{ steps.update-releases.outputs.now_epoch }}'

      - name: Open a PR from the fork to upstream
        if: steps.changed-files.outputs.all_changed_and_modified_files != ''
        id: upstream-pr
        env:
          GH_TOKEN: ${{ secrets.OBSERVABILITY_NOCTUA_TOKEN }}
        run: |
          cd $GITHUB_WORKSPACE/oci-factory
          gh pr create --repo canonical/oci-factory \
            --head observability-noctua-bot:update-${{ steps.update-releases.outputs.now_epoch }} \
            --title "chore: Add new ${{ inputs.rock-name }} releases" \
            --body "This is an automatic PR opened by the Observability Noctua bot."
